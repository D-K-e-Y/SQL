*** “Транзакции, переменные, представления” ***

***
1. В базе данных shop и sample присутвуют одни и те же таблицы учебной базы данных. 
Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. Используйте транзакции.
***

DROP DATABASE IF EXISTS sample;
CREATE DATABASE sample;
USE sample;

DROP TABLE IF EXISTS users;
CREATE TABLE users(
	id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(50) NOT NULL,
	birthday_at DATE DEFAULT NULL,
	created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
	updated_at DATETIME DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

SELECT * FROM users;

START TRANSACTION;
INSERT INTO sample.users SELECT * FROM shop_online.users WHERE id = 1;
COMMIT;

SELECT * FROM users;

***
2. Создайте представление, которое выводит название (name) товарной позиции из
таблицы products и соответствующее название (name) каталога из таблицы catalogs.
***

use shop_online;
CREATE OR REPLACE VIEW prods_desc(prod_id, prod_name, cat_name) AS SELECT p.id AS prod_id, p.name, cat.name FROM products AS p
LEFT JOIN catalogs AS cat ON p.catalog_id = cat.id;

SELECT * FROM prods_desc;


***
4. (по желанию) Пусть имеется любая таблица с календарным полем created_at.
Создайте запрос, который удаляет устаревшие записи из таблицы, оставляя только 5 самых свежих записей.
***

DELETE FROM date
WHERE created_at NOT IN ( SELECT * FROM ( SELECT * FROM date ORDER BY created_at DESC LIMIT 5 ) AS dell) ORDER BY created_at DESC;

SELECT * FROM date ORDER BY created_at DESC;


*** “Хранимые процедуры и функции, триггеры" ***

***
1. Создайте хранимую функцию hello(), которая будет возвращать приветствие, в зависимости от текущего времени суток.
С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать фразу "Добрый день", 
с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".
***

DROP PROCEDURE IF EXISTS hello;
delimiter //
CREATE PROCEDURE hello()
BEGIN
	IF(CURTIME() BETWEEN '06:00:00' AND '12:00:00') THEN SELECT 'Доброе утро';
	ELSEIF(CURTIME() BETWEEN '12:00:00' AND '18:00:00') THEN SELECT 'Добрый день';
	ELSEIF(CURTIME() BETWEEN '18:00:00' AND '00:00:00') THEN SELECT 'Добрый вечер';
	ELSE SELECT 'Доброй ночи';
	END IF;
END 
// delimiter;

***
2. В таблице products есть два текстовых поля: name с названием товара и description с его описанием. 
Допустимо присутствие обоих полей или одно из них. Ситуация, когда оба поля принимают неопределенноезначение NULL неприемлема. 
Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены. При попытке присвоить полям NULL-значение необходимо отменить операцию.
***

DROP TRIGGER IF EXISTS nullTrigger;
delimiter //
CREATE TRIGGER nullTrigger BEFORE INSERT ON products
FOR EACH ROW BEGIN
	IF(ISNULL(NEW.name) AND ISNULL(NEW.description)) 
  THEN SIGNAL SQLSTATE '500' SET MESSAGE_TEXT = 'Warning!';
	END IF;
END 
// delimiter;
